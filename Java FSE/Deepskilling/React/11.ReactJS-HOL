App.js
import React, { Component } from "react";
import CurrencyConvertor from "./CurrencyConvertor";

class App extends Component {
  constructor(props) {
    super(props);
    this.state = {
      counter: 0,
    };

    // Binding this manually for class method
    this.handleDecrement = this.handleDecrement.bind(this);
  }

  // Increment with multiple methods
  handleIncrement = () => {
    this.incrementValue();
    this.sayHello();
  };

  incrementValue = () => {
    this.setState((prevState) => ({
      counter: prevState.counter + 1,
    }));
  };

  sayHello = () => {
    console.log("Hello! Counter is increasing.");
  };

  handleDecrement() {
    this.setState((prevState) => ({
      counter: prevState.counter - 1,
    }));
  }

  // Welcome message function
  sayWelcome = (message) => {
    alert(message);
  };

  // Synthetic Event Handler
  handleClick = (event) => {
    alert("I was clicked");
    console.log("Synthetic Event: ", event);
  };

  render() {
    return (
      <div style={{ textAlign: "center", marginTop: "50px" }}>
        <h1>React Event Handling Examples</h1>

        <h2>Counter: {this.state.counter}</h2>
        <button onClick={this.handleIncrement}>Increment</button>&nbsp;
        <button onClick={this.handleDecrement}>Decrement</button>
        <hr style={{ margin: "30px 0" }} />
        <button onClick={() => this.sayWelcome("Welcome to React Events!")}>
          Say Welcome
        </button>
        <hr style={{ margin: "30px 0" }} />
        <button onClick={this.handleClick}>Click Me (Synthetic Event)</button>
        <hr style={{ margin: "30px 0" }} />
        <CurrencyConvertor />
      </div>
    );
  }
}
export default App;

CurrencyConvertor.js
import React, { useState } from "react";
function CurrencyConvertor() {
  const [rupees, setRupees] = useState("");
  const [euro, setEuro] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    const euroValue = (parseFloat(rupees) / 90).toFixed(2);
    setEuro(euroValue);
  };
  return (
    <div>
      <h2>Currency Converter (INR → Euro)</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="number"
          placeholder="Enter amount in INR"
          value={rupees}
          onChange={(e) => setRupees(e.target.value)}
        />
        &nbsp;
        <button type="submit">Convert</button>
      </form>
      {euro && (
        <p>
          € {euro} EUR (from ₹{rupees})
        </p>
      )}
    </div>
  );
}
export default CurrencyConvertor;
